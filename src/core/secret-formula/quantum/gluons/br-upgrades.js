export const brGluonUpgrades = [
  {
    id: 1,
    cost: () => new Decimal(1),
    description: () => "Dilated Time boosts Tachyon Particle gain.",
    effect: () => Currency.dilatedTime.value.plus(1).log2().plus(1),
    formatEffect: value => formatX(value, 2, 2),
  },
  {
    id: 2,
    cost: () => new Decimal(2),
    description: () => "Dimensional Sacrifice affects Dilated Time gain at a reduced rate.",
    effect: () => Sacrifice.totalBoost.plus(1).logPow(0.15),
    formatEffect: value => formatX(value, 2, 2),
  },
  {
    id: 3,
    cost: () => new Decimal(5),
    description: () => "Gain more Dilated Time based on Tachyon Particles.",
    effect: () => Currency.tachyonParticles.value.plus(1).pow(0.1),
    formatEffect: value => formatX(value, 2, 3),
  },
  {
    id: 4,
    cost: () => new Decimal(100),
    description: () => "Electrons boosts the Time Dimension per-purchase multiplier at a reduced rate.",
    effect: () => player.quantum.pair.electrons.plus(1).pow(0.1),
    formatEffect: value => formatX(value, 2, 2),
  },
  {
    id: 5,
    cost: () => new Decimal(7e15),
    description: () => "Meta Dimensions are boosted by BR Gluons.",
    effect: () => player.quantum.gluons.br.plus(1).logPow(0.15),
    formatEffect: value => formatX(value, 2, 2),
  },
  {
    id: 6,
    cost: () => new Decimal(4e19),
    description: () => "Meta-Dimension Boosts slows down Distant Antimatter Galaxy scaling.",
    effect: () => MetaDimensions.boost.totalBoosts.div(340).pow(0.5).plus(1),
    formatEffect: value => `${formatPercents(value.sub(1), 2)} weaker`,
  },
  {
    id: 7,
    cost: () => new Decimal(3e25),
    description: () => "Eternity Points slows down Remote Antimatter Galaxy scaling.",
    effect: () => Currency.eternityPoints.value.plus(1).log10().plus(1).log10().div(80).plus(1),
    formatEffect: value => `${formatPercents(value.sub(1), 2)} weaker`,
  },
  {
    id: 8,
    cost: () => new Decimal("1e570"),
    description: () => "BR Gluons raises the half-life of free preons.",
    effect: () => player.quantum.gluons.br.plus(1).log10(),
    formatEffect: value => formatX(value, 2, 2),
  },
];
